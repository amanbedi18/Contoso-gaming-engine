// -----------------------------------------------------------------------
// <copyright file="GlobalSuppressions.cs" company="Contoso Gaming">
// Copyright (c) Contoso Gaming. All rights reserved.
// </copyright>
// -----------------------------------------------------------------------

// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.
using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1028:Code should not contain trailing whitespace", Justification = "xml comment", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Controllers.V1.RouteController.GetAllRoutes(System.String,System.String)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "xml comment", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Controllers.V1.RouteController.FindRoutes(Contoso.Gaming.Engine.API.Entities.RouteRequestDetails)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "xml comment", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Controllers.V1.RouteController.GetAllRoutes(System.String,System.String)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("StyleCop.CSharp.DocumentationRules", "SA1629:Documentation text should end with a period", Justification = "xml comment", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Controllers.V1.RouteController.GetRoutesWithHops(System.String,System.String,System.Int32)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("StyleCop.CSharp.SpacingRules", "SA1028:Code should not contain trailing whitespace", Justification = "xml comment", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Controllers.V1.RouteController.GetRoutesWithHops(System.String,System.String,System.Int32)~System.Threading.Tasks.Task{Microsoft.AspNetCore.Mvc.IActionResult}")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1514:Element documentation header should be preceded by blank line", Justification = "xml comment", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Services.GraphService.getPathsAndWeightsviaLandmarks(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Contoso.Gaming.Engine.API.DataStore.Edge}},System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.List{System.String},System.String,System.Int32,System.Collections.Generic.List{System.String},System.Int32)")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1300:Element should begin with upper-case letter", Justification = "private method", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Services.GraphService.getAllPathsWithWeights(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Contoso.Gaming.Engine.API.DataStore.Edge}},System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.List{System.String},System.String,System.Int32)")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1300:Element should begin with upper-case letter", Justification = "private method", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Services.GraphService.getPathsAndWeightsviaLandmarks(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Contoso.Gaming.Engine.API.DataStore.Edge}},System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.List{System.String},System.String,System.Int32,System.Collections.Generic.List{System.String},System.Int32)")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1300:Element should begin with upper-case letter", Justification = "private method", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Services.GraphService.getPathsAndWeightsWithGivenHops(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Contoso.Gaming.Engine.API.DataStore.Edge}},System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.List{System.String},System.String,System.Int32,System.Int32,System.Int32)")]
[assembly: SuppressMessage("StyleCop.CSharp.NamingRules", "SA1300:Element should begin with upper-case letter", Justification = "private method", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Services.GraphService.hasPathBetweenVerices(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Contoso.Gaming.Engine.API.DataStore.Edge}},System.String,System.String,System.Collections.Generic.HashSet{System.String})~System.Boolean")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1514:Element documentation header should be preceded by blank line", Justification = "TODO item", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Services.GraphService.getAllPathsWithWeights(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Contoso.Gaming.Engine.API.DataStore.Edge}},System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.List{System.String},System.String,System.Int32)")]
[assembly: SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1514:Element documentation header should be preceded by blank line", Justification = "example documentation", Scope = "member", Target = "~M:Contoso.Gaming.Engine.API.Services.GraphService.getPathsAndWeightsWithGivenHops(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Contoso.Gaming.Engine.API.DataStore.Edge}},System.String,System.String,System.Collections.Generic.HashSet{System.String},System.Collections.Generic.List{System.String},System.String,System.Int32,System.Int32,System.Int32)")]
